
\section{Тест производительности}

Тест производительности представляет из себя следующее: всего в тесте учавствуют четыре файла на 1000, 10000, 100000 и 1000000 строчек. С помощью библиотеки $chrono$
я замеряю время начала и конца функции поразрядной сортировки и устойчивой из библиотеки $algorithm$ ($std::stable\_sort$).
  
\begin{alltt}
igor@igor-Aspire-A315-53G:~/Рабочий стол/c++/DA/lab1$ ./a.out < test0.txt
Поразрядная: 0.0026
Стабильная из std: 0.00127379
igor@igor-Aspire-A315-53G:~/Рабочий стол/c++/DA/lab1$ ./a.out < test1.txt
Поразрядная: 0.00447372
Стабильная из std: 0.00436133
igor@igor-Aspire-A315-53G:~/Рабочий стол/c++/DA/lab1$ ./a.out < test2.txt
Поразрядная: 0.0450362
Стабильная из std: 0.0513525
igor@igor-Aspire-A315-53G:~/Рабочий стол/c++/DA/lab1$ ./a.out < test3.txt
Поразрядная: 0.483629
Стабильная из std: 0.669035
igor@igor-Aspire-A315-53G:~/Рабочий стол/c++/DA/lab1$ 
\end{alltt}

Из приведенных тестов видно, что после 10000 элементов поразрядная сортировка начинает выигрывать у устойчивой, 
временная сложность которой, из источников, $O(nlog^2n)$

\pagebreak
